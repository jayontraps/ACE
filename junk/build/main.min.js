function on_resize(c, t) {
    return onresize = function() {
        clearTimeout(t), t = setTimeout(c, 100);
    }, c;
}

window.getActiveMQ = function() {
    $('<div id="getActiveMQ-watcher"></div>').appendTo("body").hide();
    var computed = window.getComputedStyle, watcher = document.getElementById("getActiveMQ-watcher");
    return window.getActiveMQ = "currentStyle" in watcher ? function() {
        return watcher.currentStyle.fontFamily.replace(/['"]/g, "");
    } : computed ? function() {
        return computed(watcher, null).getPropertyValue("font-family").replace(/['"]/g, "");
    } : function() {
        return "unknown";
    }, window.getActiveMQ();
}, $.fn.isOnScreen = function() {
    var win = $(window), viewport = {
        top: win.scrollTop(),
        left: win.scrollLeft()
    };
    viewport.right = viewport.left + win.width(), viewport.bottom = viewport.top + win.height();
    var bounds = this.offset();
    return bounds.right = bounds.left + this.outerWidth(), bounds.bottom = bounds.top + this.outerHeight(), 
    !(viewport.right < bounds.left || viewport.left > bounds.right || viewport.bottom < bounds.top || viewport.top > bounds.bottom);
}, function($) {
    $.fn.stopScroll = function(options) {
        return options = $.extend({
            delay: 250,
            callback: function() {}
        }, options), this.each(function() {
            var $element = $(this), element = this;
            $element.scroll(function() {
                clearTimeout($.data(element, "scrollCheck")), $.data(element, "scrollCheck", setTimeout(function() {
                    options.callback();
                }, options.delay));
            });
        });
    };
}(jQuery), function($) {
    "use strict";
    $.fn.fitVids = function(options) {
        var settings = {
            customSelector: null,
            ignore: null
        };
        if (!document.getElementById("fit-vids-style")) {
            var head = document.head || document.getElementsByTagName("head")[0], css = ".fluid-width-video-wrapper{width:100%;position:relative;padding:0;}.fluid-width-video-wrapper iframe,.fluid-width-video-wrapper object,.fluid-width-video-wrapper embed {position:absolute;top:0;left:0;width:100%;height:100%;}", div = document.createElement("div");
            div.innerHTML = '<p>x</p><style id="fit-vids-style">' + css + "</style>", head.appendChild(div.childNodes[1]);
        }
        return options && $.extend(settings, options), this.each(function() {
            var selectors = [ 'iframe[src*="player.vimeo.com"]', 'iframe[src*="youtube.com"]', 'iframe[src*="youtube-nocookie.com"]', 'iframe[src*="kickstarter.com"][src*="video.html"]', "object", "embed" ];
            settings.customSelector && selectors.push(settings.customSelector);
            var ignoreList = ".fitvidsignore";
            settings.ignore && (ignoreList = ignoreList + ", " + settings.ignore);
            var $allVideos = $(this).find(selectors.join(","));
            $allVideos = $allVideos.not("object object"), $allVideos = $allVideos.not(ignoreList), 
            $allVideos.each(function(count) {
                var $this = $(this);
                if (!($this.parents(ignoreList).length > 0 || "embed" === this.tagName.toLowerCase() && $this.parent("object").length || $this.parent(".fluid-width-video-wrapper").length)) {
                    $this.css("height") || $this.css("width") || !isNaN($this.attr("height")) && !isNaN($this.attr("width")) || ($this.attr("height", 9), 
                    $this.attr("width", 16));
                    var height = "object" === this.tagName.toLowerCase() || $this.attr("height") && !isNaN(parseInt($this.attr("height"), 10)) ? parseInt($this.attr("height"), 10) : $this.height(), width = isNaN(parseInt($this.attr("width"), 10)) ? $this.width() : parseInt($this.attr("width"), 10), aspectRatio = height / width;
                    if (!$this.attr("id")) {
                        var videoID = "fitvid" + count;
                        $this.attr("id", videoID);
                    }
                    $this.wrap('<div class="fluid-width-video-wrapper"></div>').parent(".fluid-width-video-wrapper").css("padding-top", 100 * aspectRatio + "%"), 
                    $this.removeAttr("height").removeAttr("width");
                }
            });
        });
    };
}(window.jQuery || window.Zepto), on_resize(function() {
    $(".tagline");
    if ("break-0" === getActiveMQ() ? $("body").removeClass("large-screen").addClass("small-screen") : $("body").removeClass("active-nav small-screen").addClass("large-screen"), 
    "break-0" !== getActiveMQ() && "break-1" !== getActiveMQ()) {
        $(".home-slides").length && $(window).scroll(function() {
            if ($(".home-slides").isOnScreen()) {
                var thisdist = $(this).scrollTop(), heroheight = $(".home-slides").outerHeight();
                $(".tagline").css({
                    opacity: 1 - thisdist / heroheight
                });
            } else $(".tagline").css({
                opacity: 1
            });
        });
        var mainDivHasClass = $("#main").hasClass("homepage");
        $(".hero").length && mainDivHasClass === !1 && $(window).scroll(function() {
            if ($(".hero").isOnScreen()) {
                var thisdist = $(this).scrollTop(), heroheight = $(".hero").outerHeight();
                $(".tagline").css({
                    opacity: 1 - thisdist / heroheight
                });
            } else $(".tagline").css({
                opacity: 1
            });
        });
    }
})();

var showSidebar = function() {
    $("body").removeClass("active-nav").toggleClass("active-sidebar"), $(".menu-button").removeClass("active-button");
}, showMenu = function() {
    $("body").removeClass("active-sidebar").toggleClass("active-nav"), $(".menu-button").toggleClass("active-button");
};

jQuery(document).ready(function($) {
    function resetBtn() {
        var menuBtnComponent1 = $(".menu-top"), menuBtnComponent2 = $(".menu-middle"), menuBtnComponent3 = $(".menu-bottom");
        $("#lg-screen-nav").css("display", "none"), $("body").removeClass("active-sidebar"), 
        menuBtnComponent1.removeClass("menu-top-click"), menuBtnComponent2.removeClass("menu-middle-click"), 
        menuBtnComponent3.removeClass("menu-bottom-click");
    }
    function resetManus(deskTopMq) {
        deskTopMq.matches, resetBtn();
    }
    function my_function(media_query) {
        var parallaxItems = $(".ambient");
        media_query.matches ? parallaxItems.removeClass("parallax") : parallaxItems.addClass("parallax");
    }
    $(".menu-button-mb").on("click", function() {
        var $this = $(this);
        $this.find(".menu-top").toggleClass("menu-top-click"), $this.find(".menu-middle").toggleClass("menu-middle-click"), 
        $this.find(".menu-bottom").toggleClass("menu-bottom-click"), showSidebar();
    }), $(".menu-button-lg").on("click", function() {
        var $this = $(this);
        $this.find(".menu-top").toggleClass("menu-top-click"), $this.find(".menu-middle").toggleClass("menu-middle-click"), 
        $this.find(".menu-bottom").toggleClass("menu-bottom-click"), $("#lg-screen-nav").slideToggle("fast");
    });
    var deskTopMq = window.matchMedia("(min-width: 1080px)");
    deskTopMq.addListener(resetManus), resetManus(deskTopMq), $(".switch").on("click", function() {
        var $this = $(this), currentModal = $this.prev();
        modalId = currentModal.attr("id"), currentContainer = $this.prev().find(".row"), 
        currentModal.hasClass("video-loaded") === !1 && currentContainer.load("video.html #vid-" + modalId, function() {
            $(this).fitVids(), currentModal.addClass("video-loaded");
        }), $this.prev(".modal").addClass("active");
    }), $(".switch-prod").on("click", function() {
        var currentModal = ($(this), $("#modal"));
        currentContainer = currentModal.find(".row"), currentModal.hasClass("video-loaded") === !1 && ($(currentContainer).fitVids(), 
        currentModal.addClass("video-loaded")), currentModal.addClass("active");
    }), $(".close").on("click", function(e) {
        e.preventDefault();
        var $this = $(this), currentVideo = $this.next().find("iframe"), currentVideoSrc = currentVideo.attr("src");
        $this.closest(".modal").removeClass("active"), currentVideo.attr("src", ""), currentVideo.attr("src", currentVideoSrc);
    }), $("#backToTop").hide(), $(function() {
        $(window).scroll(function() {
            $(this).scrollTop() > 100 ? $("#backToTop").fadeIn() : $("#backToTop").fadeOut();
        }), $("#backToTop").click(function() {
            return $("body,html").animate({
                scrollTop: 0
            }, 400), !1;
        });
    });
    var media_query = window.matchMedia("(max-width: 1024px)");
    media_query.addListener(my_function), my_function(media_query), $(".bxslider").length && $(".bxslider").bxSlider({
        startSlide: 1,
        infiniteLoop: !0
    }), $(".bxslider-quotes").length && $(".bxslider-quotes").bxSlider({
        mode: "fade"
    }), $("#main").on("click", ".scroll-down", function(e) {
        e.preventDefault();
        var target = $("#opening");
        $("html,body").animate({
            scrollTop: target.offset().top
        }, 600);
    });
    var subNavItems = $("#sub-nav a");
    $(subNavItems).on("click", function(e) {
        var $this = $(this), subNavTarget = $($this.attr("href"));
        e.preventDefault(), subNavItems.removeClass("active"), $this.hasClass("last") || $this.addClass("active"), 
        $("html,body").animate({
            scrollTop: subNavTarget.offset().top
        }, 600);
    }), $("#main > .feature-section").filter(":odd").addClass("stripe");
}), $(document).ready(function() {
    var wow = new WOW({
        boxClass: "wow",
        animateClass: "animated",
        offset: 0,
        mobile: !1,
        live: !0,
        callback: function() {}
    });
    wow.init();
}), $(function() {
    var sections = $("section"), navigation_links = $("#sub-nav a");
    sections.waypoint({
        handler: function(event, direction) {
            var active_section;
            active_section = $(this), "up" === direction && (active_section = active_section.prev());
            var active_link = $('#sub-nav a[href="#' + active_section.attr("id") + '"]');
            navigation_links.removeClass("active"), active_link.addClass("active");
        },
        offset: "25%"
    });
}), $(document).ready(function() {
    function load_slides(home_mq) {
        home_mq.matches && $("#homewrap").load("inc/home-slides.php", function() {
            $(".bxslider-home").length && $(".bxslider-home").bxSlider({
                mode: "fade",
                auto: !0,
                pause: 6e3,
                speed: 2e3
            });
        });
    }
    var home_mq = window.matchMedia("(min-width: 768px)");
    home_mq.addListener(load_slides), load_slides(home_mq);
});